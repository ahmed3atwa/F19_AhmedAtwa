
MC1_Master_GraduationProject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000488  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000004dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000004dc  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000050c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000148  00000000  00000000  00000548  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000013fb  00000000  00000000  00000690  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000009b5  00000000  00000000  00001a8b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000a24  00000000  00000000  00002440  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000244  00000000  00000000  00002e64  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000054a  00000000  00000000  000030a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000881  00000000  00000000  000035f2  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000f8  00000000  00000000  00003e73  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <main>
  64:	0c 94 42 02 	jmp	0x484	; 0x484 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DIO_SetPinDir>:
		case DIO_PORTC :
		PORTC = Vlaue;
		break;
		
		case DIO_PORTD :
		PORTD = Vlaue;
  6c:	44 23       	and	r20, r20
  6e:	b9 f1       	breq	.+110    	; 0xde <DIO_SetPinDir+0x72>
  70:	41 30       	cpi	r20, 0x01	; 1
  72:	09 f0       	breq	.+2      	; 0x76 <DIO_SetPinDir+0xa>
  74:	6b c0       	rjmp	.+214    	; 0x14c <DIO_SetPinDir+0xe0>
  76:	81 30       	cpi	r24, 0x01	; 1
  78:	89 f0       	breq	.+34     	; 0x9c <DIO_SetPinDir+0x30>
  7a:	28 f0       	brcs	.+10     	; 0x86 <DIO_SetPinDir+0x1a>
  7c:	82 30       	cpi	r24, 0x02	; 2
  7e:	c9 f0       	breq	.+50     	; 0xb2 <DIO_SetPinDir+0x46>
  80:	83 30       	cpi	r24, 0x03	; 3
  82:	11 f1       	breq	.+68     	; 0xc8 <DIO_SetPinDir+0x5c>
  84:	08 95       	ret
  86:	2a b3       	in	r18, 0x1a	; 26
  88:	81 e0       	ldi	r24, 0x01	; 1
  8a:	90 e0       	ldi	r25, 0x00	; 0
  8c:	02 c0       	rjmp	.+4      	; 0x92 <DIO_SetPinDir+0x26>
  8e:	88 0f       	add	r24, r24
  90:	99 1f       	adc	r25, r25
  92:	6a 95       	dec	r22
  94:	e2 f7       	brpl	.-8      	; 0x8e <DIO_SetPinDir+0x22>
  96:	82 2b       	or	r24, r18
  98:	8a bb       	out	0x1a, r24	; 26
  9a:	08 95       	ret
  9c:	27 b3       	in	r18, 0x17	; 23
  9e:	81 e0       	ldi	r24, 0x01	; 1
  a0:	90 e0       	ldi	r25, 0x00	; 0
  a2:	02 c0       	rjmp	.+4      	; 0xa8 <DIO_SetPinDir+0x3c>
  a4:	88 0f       	add	r24, r24
  a6:	99 1f       	adc	r25, r25
  a8:	6a 95       	dec	r22
  aa:	e2 f7       	brpl	.-8      	; 0xa4 <DIO_SetPinDir+0x38>
  ac:	82 2b       	or	r24, r18
  ae:	87 bb       	out	0x17, r24	; 23
  b0:	08 95       	ret
  b2:	24 b3       	in	r18, 0x14	; 20
  b4:	81 e0       	ldi	r24, 0x01	; 1
  b6:	90 e0       	ldi	r25, 0x00	; 0
  b8:	02 c0       	rjmp	.+4      	; 0xbe <DIO_SetPinDir+0x52>
  ba:	88 0f       	add	r24, r24
  bc:	99 1f       	adc	r25, r25
  be:	6a 95       	dec	r22
  c0:	e2 f7       	brpl	.-8      	; 0xba <DIO_SetPinDir+0x4e>
  c2:	82 2b       	or	r24, r18
  c4:	84 bb       	out	0x14, r24	; 20
  c6:	08 95       	ret
  c8:	21 b3       	in	r18, 0x11	; 17
  ca:	81 e0       	ldi	r24, 0x01	; 1
  cc:	90 e0       	ldi	r25, 0x00	; 0
  ce:	02 c0       	rjmp	.+4      	; 0xd4 <DIO_SetPinDir+0x68>
  d0:	88 0f       	add	r24, r24
  d2:	99 1f       	adc	r25, r25
  d4:	6a 95       	dec	r22
  d6:	e2 f7       	brpl	.-8      	; 0xd0 <DIO_SetPinDir+0x64>
  d8:	82 2b       	or	r24, r18
  da:	81 bb       	out	0x11, r24	; 17
  dc:	08 95       	ret
  de:	81 30       	cpi	r24, 0x01	; 1
  e0:	91 f0       	breq	.+36     	; 0x106 <DIO_SetPinDir+0x9a>
  e2:	28 f0       	brcs	.+10     	; 0xee <DIO_SetPinDir+0x82>
  e4:	82 30       	cpi	r24, 0x02	; 2
  e6:	d9 f0       	breq	.+54     	; 0x11e <DIO_SetPinDir+0xb2>
  e8:	83 30       	cpi	r24, 0x03	; 3
  ea:	29 f1       	breq	.+74     	; 0x136 <DIO_SetPinDir+0xca>
  ec:	08 95       	ret
  ee:	2a b3       	in	r18, 0x1a	; 26
  f0:	81 e0       	ldi	r24, 0x01	; 1
  f2:	90 e0       	ldi	r25, 0x00	; 0
  f4:	02 c0       	rjmp	.+4      	; 0xfa <DIO_SetPinDir+0x8e>
  f6:	88 0f       	add	r24, r24
  f8:	99 1f       	adc	r25, r25
  fa:	6a 95       	dec	r22
  fc:	e2 f7       	brpl	.-8      	; 0xf6 <DIO_SetPinDir+0x8a>
  fe:	80 95       	com	r24
 100:	82 23       	and	r24, r18
 102:	8a bb       	out	0x1a, r24	; 26
 104:	08 95       	ret
 106:	27 b3       	in	r18, 0x17	; 23
 108:	81 e0       	ldi	r24, 0x01	; 1
 10a:	90 e0       	ldi	r25, 0x00	; 0
 10c:	02 c0       	rjmp	.+4      	; 0x112 <DIO_SetPinDir+0xa6>
 10e:	88 0f       	add	r24, r24
 110:	99 1f       	adc	r25, r25
 112:	6a 95       	dec	r22
 114:	e2 f7       	brpl	.-8      	; 0x10e <DIO_SetPinDir+0xa2>
 116:	80 95       	com	r24
 118:	82 23       	and	r24, r18
 11a:	87 bb       	out	0x17, r24	; 23
 11c:	08 95       	ret
 11e:	24 b3       	in	r18, 0x14	; 20
 120:	81 e0       	ldi	r24, 0x01	; 1
 122:	90 e0       	ldi	r25, 0x00	; 0
 124:	02 c0       	rjmp	.+4      	; 0x12a <DIO_SetPinDir+0xbe>
 126:	88 0f       	add	r24, r24
 128:	99 1f       	adc	r25, r25
 12a:	6a 95       	dec	r22
 12c:	e2 f7       	brpl	.-8      	; 0x126 <DIO_SetPinDir+0xba>
 12e:	80 95       	com	r24
 130:	82 23       	and	r24, r18
 132:	84 bb       	out	0x14, r24	; 20
 134:	08 95       	ret
 136:	21 b3       	in	r18, 0x11	; 17
 138:	81 e0       	ldi	r24, 0x01	; 1
 13a:	90 e0       	ldi	r25, 0x00	; 0
 13c:	02 c0       	rjmp	.+4      	; 0x142 <DIO_SetPinDir+0xd6>
 13e:	88 0f       	add	r24, r24
 140:	99 1f       	adc	r25, r25
 142:	6a 95       	dec	r22
 144:	e2 f7       	brpl	.-8      	; 0x13e <DIO_SetPinDir+0xd2>
 146:	80 95       	com	r24
 148:	82 23       	and	r24, r18
 14a:	81 bb       	out	0x11, r24	; 17
 14c:	08 95       	ret

0000014e <DIO_SetPinValue>:


void DIO_SetPinValue(uint8 Port , uint8 Pin , uint8 Value)
{
	
	switch (Value)
 14e:	44 23       	and	r20, r20
 150:	b9 f1       	breq	.+110    	; 0x1c0 <DIO_SetPinValue+0x72>
 152:	41 30       	cpi	r20, 0x01	; 1
 154:	09 f0       	breq	.+2      	; 0x158 <DIO_SetPinValue+0xa>
 156:	6b c0       	rjmp	.+214    	; 0x22e <DIO_SetPinValue+0xe0>
	{
		case  DIO_PIN_HIGH :
		
		switch (Port)
 158:	81 30       	cpi	r24, 0x01	; 1
 15a:	89 f0       	breq	.+34     	; 0x17e <DIO_SetPinValue+0x30>
 15c:	28 f0       	brcs	.+10     	; 0x168 <DIO_SetPinValue+0x1a>
 15e:	82 30       	cpi	r24, 0x02	; 2
 160:	c9 f0       	breq	.+50     	; 0x194 <DIO_SetPinValue+0x46>
 162:	83 30       	cpi	r24, 0x03	; 3
 164:	11 f1       	breq	.+68     	; 0x1aa <DIO_SetPinValue+0x5c>
 166:	08 95       	ret
		{
			case DIO_PORTA :
			SET_BIT(PORTA , Pin);
 168:	2b b3       	in	r18, 0x1b	; 27
 16a:	81 e0       	ldi	r24, 0x01	; 1
 16c:	90 e0       	ldi	r25, 0x00	; 0
 16e:	02 c0       	rjmp	.+4      	; 0x174 <DIO_SetPinValue+0x26>
 170:	88 0f       	add	r24, r24
 172:	99 1f       	adc	r25, r25
 174:	6a 95       	dec	r22
 176:	e2 f7       	brpl	.-8      	; 0x170 <DIO_SetPinValue+0x22>
 178:	82 2b       	or	r24, r18
 17a:	8b bb       	out	0x1b, r24	; 27
			break;
 17c:	08 95       	ret
			
			case DIO_PORTB :
			SET_BIT(PORTB , Pin);
 17e:	28 b3       	in	r18, 0x18	; 24
 180:	81 e0       	ldi	r24, 0x01	; 1
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	02 c0       	rjmp	.+4      	; 0x18a <DIO_SetPinValue+0x3c>
 186:	88 0f       	add	r24, r24
 188:	99 1f       	adc	r25, r25
 18a:	6a 95       	dec	r22
 18c:	e2 f7       	brpl	.-8      	; 0x186 <DIO_SetPinValue+0x38>
 18e:	82 2b       	or	r24, r18
 190:	88 bb       	out	0x18, r24	; 24
			break;
 192:	08 95       	ret
			
			case DIO_PORTC :
			SET_BIT(PORTC , Pin);
 194:	25 b3       	in	r18, 0x15	; 21
 196:	81 e0       	ldi	r24, 0x01	; 1
 198:	90 e0       	ldi	r25, 0x00	; 0
 19a:	02 c0       	rjmp	.+4      	; 0x1a0 <DIO_SetPinValue+0x52>
 19c:	88 0f       	add	r24, r24
 19e:	99 1f       	adc	r25, r25
 1a0:	6a 95       	dec	r22
 1a2:	e2 f7       	brpl	.-8      	; 0x19c <DIO_SetPinValue+0x4e>
 1a4:	82 2b       	or	r24, r18
 1a6:	85 bb       	out	0x15, r24	; 21
			break;
 1a8:	08 95       	ret
			
			case DIO_PORTD :
			SET_BIT(PORTD , Pin);
 1aa:	22 b3       	in	r18, 0x12	; 18
 1ac:	81 e0       	ldi	r24, 0x01	; 1
 1ae:	90 e0       	ldi	r25, 0x00	; 0
 1b0:	02 c0       	rjmp	.+4      	; 0x1b6 <DIO_SetPinValue+0x68>
 1b2:	88 0f       	add	r24, r24
 1b4:	99 1f       	adc	r25, r25
 1b6:	6a 95       	dec	r22
 1b8:	e2 f7       	brpl	.-8      	; 0x1b2 <DIO_SetPinValue+0x64>
 1ba:	82 2b       	or	r24, r18
 1bc:	82 bb       	out	0x12, r24	; 18
			break;
 1be:	08 95       	ret
		break;
		
		
		case  DIO_PIN_LOW :
		
		switch (Port)
 1c0:	81 30       	cpi	r24, 0x01	; 1
 1c2:	91 f0       	breq	.+36     	; 0x1e8 <DIO_SetPinValue+0x9a>
 1c4:	28 f0       	brcs	.+10     	; 0x1d0 <DIO_SetPinValue+0x82>
 1c6:	82 30       	cpi	r24, 0x02	; 2
 1c8:	d9 f0       	breq	.+54     	; 0x200 <DIO_SetPinValue+0xb2>
 1ca:	83 30       	cpi	r24, 0x03	; 3
 1cc:	29 f1       	breq	.+74     	; 0x218 <DIO_SetPinValue+0xca>
 1ce:	08 95       	ret
		{
			case DIO_PORTA :
			CLR_BIT(PORTA , Pin);
 1d0:	2b b3       	in	r18, 0x1b	; 27
 1d2:	81 e0       	ldi	r24, 0x01	; 1
 1d4:	90 e0       	ldi	r25, 0x00	; 0
 1d6:	02 c0       	rjmp	.+4      	; 0x1dc <DIO_SetPinValue+0x8e>
 1d8:	88 0f       	add	r24, r24
 1da:	99 1f       	adc	r25, r25
 1dc:	6a 95       	dec	r22
 1de:	e2 f7       	brpl	.-8      	; 0x1d8 <DIO_SetPinValue+0x8a>
 1e0:	80 95       	com	r24
 1e2:	82 23       	and	r24, r18
 1e4:	8b bb       	out	0x1b, r24	; 27
			break;
 1e6:	08 95       	ret
			
			case DIO_PORTB :
			CLR_BIT(PORTB , Pin);
 1e8:	28 b3       	in	r18, 0x18	; 24
 1ea:	81 e0       	ldi	r24, 0x01	; 1
 1ec:	90 e0       	ldi	r25, 0x00	; 0
 1ee:	02 c0       	rjmp	.+4      	; 0x1f4 <DIO_SetPinValue+0xa6>
 1f0:	88 0f       	add	r24, r24
 1f2:	99 1f       	adc	r25, r25
 1f4:	6a 95       	dec	r22
 1f6:	e2 f7       	brpl	.-8      	; 0x1f0 <DIO_SetPinValue+0xa2>
 1f8:	80 95       	com	r24
 1fa:	82 23       	and	r24, r18
 1fc:	88 bb       	out	0x18, r24	; 24
			break;
 1fe:	08 95       	ret
			
			case DIO_PORTC :
			CLR_BIT(PORTC , Pin);
 200:	25 b3       	in	r18, 0x15	; 21
 202:	81 e0       	ldi	r24, 0x01	; 1
 204:	90 e0       	ldi	r25, 0x00	; 0
 206:	02 c0       	rjmp	.+4      	; 0x20c <DIO_SetPinValue+0xbe>
 208:	88 0f       	add	r24, r24
 20a:	99 1f       	adc	r25, r25
 20c:	6a 95       	dec	r22
 20e:	e2 f7       	brpl	.-8      	; 0x208 <DIO_SetPinValue+0xba>
 210:	80 95       	com	r24
 212:	82 23       	and	r24, r18
 214:	85 bb       	out	0x15, r24	; 21
			break;
 216:	08 95       	ret
			
			case DIO_PORTD :
			CLR_BIT(PORTD , Pin);
 218:	22 b3       	in	r18, 0x12	; 18
 21a:	81 e0       	ldi	r24, 0x01	; 1
 21c:	90 e0       	ldi	r25, 0x00	; 0
 21e:	02 c0       	rjmp	.+4      	; 0x224 <DIO_SetPinValue+0xd6>
 220:	88 0f       	add	r24, r24
 222:	99 1f       	adc	r25, r25
 224:	6a 95       	dec	r22
 226:	e2 f7       	brpl	.-8      	; 0x220 <DIO_SetPinValue+0xd2>
 228:	80 95       	com	r24
 22a:	82 23       	and	r24, r18
 22c:	82 bb       	out	0x12, r24	; 18
 22e:	08 95       	ret

00000230 <LCD_WriteCommand>:
	
	#endif
}

void LCD_WriteCommand(uint8 cmd)
{
 230:	cf 93       	push	r28
 232:	c8 2f       	mov	r28, r24
	DIO_SetPinValue(LCD_4BIT_MODE_CMD_PORT , LCD_RS_PIN , DIO_PIN_LOW);
 234:	40 e0       	ldi	r20, 0x00	; 0
 236:	61 e0       	ldi	r22, 0x01	; 1
 238:	81 e0       	ldi	r24, 0x01	; 1
 23a:	0e 94 a7 00 	call	0x14e	; 0x14e <DIO_SetPinValue>
	DIO_SetPinValue(LCD_4BIT_MODE_CMD_PORT , LCD_RW_PIN , DIO_PIN_LOW);
 23e:	40 e0       	ldi	r20, 0x00	; 0
 240:	62 e0       	ldi	r22, 0x02	; 2
 242:	81 e0       	ldi	r24, 0x01	; 1
 244:	0e 94 a7 00 	call	0x14e	; 0x14e <DIO_SetPinValue>
	DIO_SetPinValue(LCD_4BIT_MODE_CMD_PORT , LCD_E_PIN , DIO_PIN_LOW);
 248:	40 e0       	ldi	r20, 0x00	; 0
 24a:	63 e0       	ldi	r22, 0x03	; 3
 24c:	81 e0       	ldi	r24, 0x01	; 1
 24e:	0e 94 a7 00 	call	0x14e	; 0x14e <DIO_SetPinValue>
	
	PORTA = (cmd & 0xf0) | (PORTA & 0x0f);
 252:	8b b3       	in	r24, 0x1b	; 27
 254:	9c 2f       	mov	r25, r28
 256:	90 7f       	andi	r25, 0xF0	; 240
 258:	8f 70       	andi	r24, 0x0F	; 15
 25a:	89 2b       	or	r24, r25
 25c:	8b bb       	out	0x1b, r24	; 27
	
	DIO_SetPinValue(LCD_4BIT_MODE_CMD_PORT , LCD_E_PIN , DIO_PIN_HIGH);
 25e:	41 e0       	ldi	r20, 0x01	; 1
 260:	63 e0       	ldi	r22, 0x03	; 3
 262:	81 e0       	ldi	r24, 0x01	; 1
 264:	0e 94 a7 00 	call	0x14e	; 0x14e <DIO_SetPinValue>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 268:	8f e9       	ldi	r24, 0x9F	; 159
 26a:	9f e0       	ldi	r25, 0x0F	; 15
 26c:	01 97       	sbiw	r24, 0x01	; 1
 26e:	f1 f7       	brne	.-4      	; 0x26c <LCD_WriteCommand+0x3c>
 270:	00 c0       	rjmp	.+0      	; 0x272 <LCD_WriteCommand+0x42>
 272:	00 00       	nop
	_delay_ms(1);
	DIO_SetPinValue(LCD_4BIT_MODE_CMD_PORT , LCD_E_PIN , DIO_PIN_LOW);
 274:	40 e0       	ldi	r20, 0x00	; 0
 276:	63 e0       	ldi	r22, 0x03	; 3
 278:	81 e0       	ldi	r24, 0x01	; 1
 27a:	0e 94 a7 00 	call	0x14e	; 0x14e <DIO_SetPinValue>
	
	PORTA = (cmd << 4) | (PORTA & 0x0f);
 27e:	20 e1       	ldi	r18, 0x10	; 16
 280:	c2 9f       	mul	r28, r18
 282:	c0 01       	movw	r24, r0
 284:	11 24       	eor	r1, r1
 286:	9b b3       	in	r25, 0x1b	; 27
 288:	9f 70       	andi	r25, 0x0F	; 15
 28a:	89 2b       	or	r24, r25
 28c:	8b bb       	out	0x1b, r24	; 27
		
	DIO_SetPinValue(LCD_4BIT_MODE_CMD_PORT , LCD_E_PIN , DIO_PIN_HIGH);
 28e:	41 e0       	ldi	r20, 0x01	; 1
 290:	63 e0       	ldi	r22, 0x03	; 3
 292:	81 e0       	ldi	r24, 0x01	; 1
 294:	0e 94 a7 00 	call	0x14e	; 0x14e <DIO_SetPinValue>
 298:	8f e3       	ldi	r24, 0x3F	; 63
 29a:	9c e9       	ldi	r25, 0x9C	; 156
 29c:	01 97       	sbiw	r24, 0x01	; 1
 29e:	f1 f7       	brne	.-4      	; 0x29c <LCD_WriteCommand+0x6c>
 2a0:	00 c0       	rjmp	.+0      	; 0x2a2 <LCD_WriteCommand+0x72>
 2a2:	00 00       	nop
	_delay_ms(10);
	DIO_SetPinValue(LCD_4BIT_MODE_CMD_PORT , LCD_E_PIN , DIO_PIN_LOW);
 2a4:	40 e0       	ldi	r20, 0x00	; 0
 2a6:	63 e0       	ldi	r22, 0x03	; 3
 2a8:	81 e0       	ldi	r24, 0x01	; 1
 2aa:	0e 94 a7 00 	call	0x14e	; 0x14e <DIO_SetPinValue>
 2ae:	8f e1       	ldi	r24, 0x1F	; 31
 2b0:	9e e4       	ldi	r25, 0x4E	; 78
 2b2:	01 97       	sbiw	r24, 0x01	; 1
 2b4:	f1 f7       	brne	.-4      	; 0x2b2 <LCD_WriteCommand+0x82>
 2b6:	00 c0       	rjmp	.+0      	; 0x2b8 <LCD_WriteCommand+0x88>
 2b8:	00 00       	nop
	
	_delay_ms(5);
}
 2ba:	cf 91       	pop	r28
 2bc:	08 95       	ret

000002be <LCD_Init>:
	
	
	
	#elif  LCD_MODE   ==    4
	
		DIO_SetPinDir(LCD_4BIT_MODE_CMD_PORT , LCD_RS_PIN , DIO_PIN_OUTPUT);
 2be:	41 e0       	ldi	r20, 0x01	; 1
 2c0:	61 e0       	ldi	r22, 0x01	; 1
 2c2:	81 e0       	ldi	r24, 0x01	; 1
 2c4:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_SetPinDir>
		DIO_SetPinDir(LCD_4BIT_MODE_CMD_PORT , LCD_RW_PIN , DIO_PIN_OUTPUT);
 2c8:	41 e0       	ldi	r20, 0x01	; 1
 2ca:	62 e0       	ldi	r22, 0x02	; 2
 2cc:	81 e0       	ldi	r24, 0x01	; 1
 2ce:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_SetPinDir>
		DIO_SetPinDir(LCD_4BIT_MODE_CMD_PORT , LCD_E_PIN , DIO_PIN_OUTPUT);
 2d2:	41 e0       	ldi	r20, 0x01	; 1
 2d4:	63 e0       	ldi	r22, 0x03	; 3
 2d6:	81 e0       	ldi	r24, 0x01	; 1
 2d8:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_SetPinDir>
		
		DIO_SetPinDir(LCD_4BIT_MODE_DATA_PORT , LCD_D4, DIO_PIN_OUTPUT);
 2dc:	41 e0       	ldi	r20, 0x01	; 1
 2de:	64 e0       	ldi	r22, 0x04	; 4
 2e0:	80 e0       	ldi	r24, 0x00	; 0
 2e2:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_SetPinDir>
		DIO_SetPinDir(LCD_4BIT_MODE_DATA_PORT , LCD_D5, DIO_PIN_OUTPUT);
 2e6:	41 e0       	ldi	r20, 0x01	; 1
 2e8:	65 e0       	ldi	r22, 0x05	; 5
 2ea:	80 e0       	ldi	r24, 0x00	; 0
 2ec:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_SetPinDir>
		DIO_SetPinDir(LCD_4BIT_MODE_DATA_PORT , LCD_D6, DIO_PIN_OUTPUT);
 2f0:	41 e0       	ldi	r20, 0x01	; 1
 2f2:	66 e0       	ldi	r22, 0x06	; 6
 2f4:	80 e0       	ldi	r24, 0x00	; 0
 2f6:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_SetPinDir>
		DIO_SetPinDir(LCD_4BIT_MODE_DATA_PORT , LCD_D7, DIO_PIN_OUTPUT);
 2fa:	41 e0       	ldi	r20, 0x01	; 1
 2fc:	67 e0       	ldi	r22, 0x07	; 7
 2fe:	80 e0       	ldi	r24, 0x00	; 0
 300:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_SetPinDir>
 304:	2f ef       	ldi	r18, 0xFF	; 255
 306:	81 ee       	ldi	r24, 0xE1	; 225
 308:	94 e0       	ldi	r25, 0x04	; 4
 30a:	21 50       	subi	r18, 0x01	; 1
 30c:	80 40       	sbci	r24, 0x00	; 0
 30e:	90 40       	sbci	r25, 0x00	; 0
 310:	e1 f7       	brne	.-8      	; 0x30a <LCD_Init+0x4c>
 312:	00 c0       	rjmp	.+0      	; 0x314 <LCD_Init+0x56>
 314:	00 00       	nop
	
	   _delay_ms(100);
	   
	    LCD_WriteCommand(0X33);
 316:	83 e3       	ldi	r24, 0x33	; 51
 318:	0e 94 18 01 	call	0x230	; 0x230 <LCD_WriteCommand>
	    LCD_WriteCommand(0X32);
 31c:	82 e3       	ldi	r24, 0x32	; 50
 31e:	0e 94 18 01 	call	0x230	; 0x230 <LCD_WriteCommand>
		LCD_WriteCommand(0X28);
 322:	88 e2       	ldi	r24, 0x28	; 40
 324:	0e 94 18 01 	call	0x230	; 0x230 <LCD_WriteCommand>
		LCD_WriteCommand(0X0C);
 328:	8c e0       	ldi	r24, 0x0C	; 12
 32a:	0e 94 18 01 	call	0x230	; 0x230 <LCD_WriteCommand>
		LCD_WriteCommand(0X01);
 32e:	81 e0       	ldi	r24, 0x01	; 1
 330:	0e 94 18 01 	call	0x230	; 0x230 <LCD_WriteCommand>
		LCD_WriteCommand(0X06);
 334:	86 e0       	ldi	r24, 0x06	; 6
 336:	0e 94 18 01 	call	0x230	; 0x230 <LCD_WriteCommand>
		LCD_WriteCommand(0X02);
 33a:	82 e0       	ldi	r24, 0x02	; 2
 33c:	0e 94 18 01 	call	0x230	; 0x230 <LCD_WriteCommand>
 340:	08 95       	ret

00000342 <LCD_WriteChar>:
	
	_delay_ms(5);
}

void LCD_WriteChar(uint8 data)
{
 342:	cf 93       	push	r28
 344:	c8 2f       	mov	r28, r24
	DIO_SetPinValue(LCD_4BIT_MODE_CMD_PORT , LCD_RS_PIN , DIO_PIN_HIGH);
 346:	41 e0       	ldi	r20, 0x01	; 1
 348:	61 e0       	ldi	r22, 0x01	; 1
 34a:	81 e0       	ldi	r24, 0x01	; 1
 34c:	0e 94 a7 00 	call	0x14e	; 0x14e <DIO_SetPinValue>
	DIO_SetPinValue(LCD_4BIT_MODE_CMD_PORT , LCD_RW_PIN , DIO_PIN_LOW);
 350:	40 e0       	ldi	r20, 0x00	; 0
 352:	62 e0       	ldi	r22, 0x02	; 2
 354:	81 e0       	ldi	r24, 0x01	; 1
 356:	0e 94 a7 00 	call	0x14e	; 0x14e <DIO_SetPinValue>
	DIO_SetPinValue(LCD_4BIT_MODE_CMD_PORT , LCD_E_PIN , DIO_PIN_LOW);
 35a:	40 e0       	ldi	r20, 0x00	; 0
 35c:	63 e0       	ldi	r22, 0x03	; 3
 35e:	81 e0       	ldi	r24, 0x01	; 1
 360:	0e 94 a7 00 	call	0x14e	; 0x14e <DIO_SetPinValue>
	
	PORTA = (data & 0xf0) | (PORTA & 0x0f);
 364:	8b b3       	in	r24, 0x1b	; 27
 366:	9c 2f       	mov	r25, r28
 368:	90 7f       	andi	r25, 0xF0	; 240
 36a:	8f 70       	andi	r24, 0x0F	; 15
 36c:	89 2b       	or	r24, r25
 36e:	8b bb       	out	0x1b, r24	; 27
	
	DIO_SetPinValue(LCD_4BIT_MODE_CMD_PORT , LCD_E_PIN , DIO_PIN_HIGH);
 370:	41 e0       	ldi	r20, 0x01	; 1
 372:	63 e0       	ldi	r22, 0x03	; 3
 374:	81 e0       	ldi	r24, 0x01	; 1
 376:	0e 94 a7 00 	call	0x14e	; 0x14e <DIO_SetPinValue>
 37a:	8f e9       	ldi	r24, 0x9F	; 159
 37c:	9f e0       	ldi	r25, 0x0F	; 15
 37e:	01 97       	sbiw	r24, 0x01	; 1
 380:	f1 f7       	brne	.-4      	; 0x37e <LCD_WriteChar+0x3c>
 382:	00 c0       	rjmp	.+0      	; 0x384 <LCD_WriteChar+0x42>
 384:	00 00       	nop
	_delay_ms(1);
	DIO_SetPinValue(LCD_4BIT_MODE_CMD_PORT , LCD_E_PIN , DIO_PIN_LOW);
 386:	40 e0       	ldi	r20, 0x00	; 0
 388:	63 e0       	ldi	r22, 0x03	; 3
 38a:	81 e0       	ldi	r24, 0x01	; 1
 38c:	0e 94 a7 00 	call	0x14e	; 0x14e <DIO_SetPinValue>
	
	PORTA = (data << 4) | (PORTA & 0x0f);
 390:	20 e1       	ldi	r18, 0x10	; 16
 392:	c2 9f       	mul	r28, r18
 394:	c0 01       	movw	r24, r0
 396:	11 24       	eor	r1, r1
 398:	9b b3       	in	r25, 0x1b	; 27
 39a:	9f 70       	andi	r25, 0x0F	; 15
 39c:	89 2b       	or	r24, r25
 39e:	8b bb       	out	0x1b, r24	; 27
	
	DIO_SetPinValue(LCD_4BIT_MODE_CMD_PORT , LCD_E_PIN , DIO_PIN_HIGH);
 3a0:	41 e0       	ldi	r20, 0x01	; 1
 3a2:	63 e0       	ldi	r22, 0x03	; 3
 3a4:	81 e0       	ldi	r24, 0x01	; 1
 3a6:	0e 94 a7 00 	call	0x14e	; 0x14e <DIO_SetPinValue>
 3aa:	8f e3       	ldi	r24, 0x3F	; 63
 3ac:	9c e9       	ldi	r25, 0x9C	; 156
 3ae:	01 97       	sbiw	r24, 0x01	; 1
 3b0:	f1 f7       	brne	.-4      	; 0x3ae <LCD_WriteChar+0x6c>
 3b2:	00 c0       	rjmp	.+0      	; 0x3b4 <LCD_WriteChar+0x72>
 3b4:	00 00       	nop
	_delay_ms(10);
	DIO_SetPinValue(LCD_4BIT_MODE_CMD_PORT , LCD_E_PIN , DIO_PIN_LOW);
 3b6:	40 e0       	ldi	r20, 0x00	; 0
 3b8:	63 e0       	ldi	r22, 0x03	; 3
 3ba:	81 e0       	ldi	r24, 0x01	; 1
 3bc:	0e 94 a7 00 	call	0x14e	; 0x14e <DIO_SetPinValue>
 3c0:	8f e1       	ldi	r24, 0x1F	; 31
 3c2:	9e e4       	ldi	r25, 0x4E	; 78
 3c4:	01 97       	sbiw	r24, 0x01	; 1
 3c6:	f1 f7       	brne	.-4      	; 0x3c4 <LCD_WriteChar+0x82>
 3c8:	00 c0       	rjmp	.+0      	; 0x3ca <LCD_WriteChar+0x88>
 3ca:	00 00       	nop
	
	_delay_ms(5);
}
 3cc:	cf 91       	pop	r28
 3ce:	08 95       	ret

000003d0 <main>:

int main(void)
{
    uint8 data = 0;
	
		UART_Init();
 3d0:	0e 94 2c 02 	call	0x458	; 0x458 <UART_Init>
		
		LCD_Init();
 3d4:	0e 94 5f 01 	call	0x2be	; 0x2be <LCD_Init>
		
		SPI_Master_Init();
 3d8:	0e 94 04 02 	call	0x408	; 0x408 <SPI_Master_Init>
		SPI_Master_InitTrans();
 3dc:	0e 94 21 02 	call	0x442	; 0x442 <SPI_Master_InitTrans>
 3e0:	2f ef       	ldi	r18, 0xFF	; 255
 3e2:	83 ed       	ldi	r24, 0xD3	; 211
 3e4:	90 e3       	ldi	r25, 0x30	; 48
 3e6:	21 50       	subi	r18, 0x01	; 1
 3e8:	80 40       	sbci	r24, 0x00	; 0
 3ea:	90 40       	sbci	r25, 0x00	; 0
 3ec:	e1 f7       	brne	.-8      	; 0x3e6 <main+0x16>
 3ee:	00 c0       	rjmp	.+0      	; 0x3f0 <main+0x20>
 3f0:	00 00       	nop
		_delay_ms(1000);
		
		
    while (1) 
    {
				data= UART_Rx();
 3f2:	0e 94 3e 02 	call	0x47c	; 0x47c <UART_Rx>
 3f6:	c8 2f       	mov	r28, r24
				
				if(data)
 3f8:	88 23       	and	r24, r24
 3fa:	d9 f3       	breq	.-10     	; 0x3f2 <main+0x22>
				{
					LCD_WriteChar(data);
 3fc:	0e 94 a1 01 	call	0x342	; 0x342 <LCD_WriteChar>
					SPI_TransSiver(data);
 400:	8c 2f       	mov	r24, r28
 402:	0e 94 27 02 	call	0x44e	; 0x44e <SPI_TransSiver>
 406:	f5 cf       	rjmp	.-22     	; 0x3f2 <main+0x22>

00000408 <SPI_Master_Init>:
	DIO_SetPinValue(DIO_PORTB, DIO_PIN4, DIO_PIN_LOW);
}

void SPI_Master_TermTrans(void)
{
	DIO_SetPinValue(DIO_PORTB, DIO_PIN4, DIO_PIN_HIGH);
 408:	40 e0       	ldi	r20, 0x00	; 0
 40a:	66 e0       	ldi	r22, 0x06	; 6
 40c:	81 e0       	ldi	r24, 0x01	; 1
 40e:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_SetPinDir>
 412:	41 e0       	ldi	r20, 0x01	; 1
 414:	65 e0       	ldi	r22, 0x05	; 5
 416:	81 e0       	ldi	r24, 0x01	; 1
 418:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_SetPinDir>
 41c:	41 e0       	ldi	r20, 0x01	; 1
 41e:	67 e0       	ldi	r22, 0x07	; 7
 420:	81 e0       	ldi	r24, 0x01	; 1
 422:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_SetPinDir>
 426:	41 e0       	ldi	r20, 0x01	; 1
 428:	64 e0       	ldi	r22, 0x04	; 4
 42a:	81 e0       	ldi	r24, 0x01	; 1
 42c:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_SetPinDir>
 430:	8d b1       	in	r24, 0x0d	; 13
 432:	83 65       	ori	r24, 0x53	; 83
 434:	8d b9       	out	0x0d, r24	; 13
 436:	41 e0       	ldi	r20, 0x01	; 1
 438:	64 e0       	ldi	r22, 0x04	; 4
 43a:	81 e0       	ldi	r24, 0x01	; 1
 43c:	0e 94 a7 00 	call	0x14e	; 0x14e <DIO_SetPinValue>
 440:	08 95       	ret

00000442 <SPI_Master_InitTrans>:
 442:	40 e0       	ldi	r20, 0x00	; 0
 444:	64 e0       	ldi	r22, 0x04	; 4
 446:	81 e0       	ldi	r24, 0x01	; 1
 448:	0e 94 a7 00 	call	0x14e	; 0x14e <DIO_SetPinValue>
 44c:	08 95       	ret

0000044e <SPI_TransSiver>:

uint8 SPI_TransSiver(uint8 data)
{
	uint8 rec_data=0;
	
	SPI->SPDR=data;
 44e:	8f b9       	out	0x0f, r24	; 15
	
	while(GET_BIT(SPI->SPSR,7)==0);
 450:	77 9b       	sbis	0x0e, 7	; 14
 452:	fe cf       	rjmp	.-4      	; 0x450 <SPI_TransSiver+0x2>
	
	rec_data= SPI->SPDR;
 454:	8f b1       	in	r24, 0x0f	; 15
	
	return rec_data;
 456:	08 95       	ret

00000458 <UART_Init>:
	while (str[i] != '\0')
	{
		UART_Tx(str[i]);
		i++;
	}
}
 458:	81 b3       	in	r24, 0x11	; 17
 45a:	82 60       	ori	r24, 0x02	; 2
 45c:	81 bb       	out	0x11, r24	; 17
 45e:	81 b3       	in	r24, 0x11	; 17
 460:	8e 7f       	andi	r24, 0xFE	; 254
 462:	81 bb       	out	0x11, r24	; 17
 464:	8a b1       	in	r24, 0x0a	; 10
 466:	80 61       	ori	r24, 0x10	; 16
 468:	8a b9       	out	0x0a, r24	; 10
 46a:	8a b1       	in	r24, 0x0a	; 10
 46c:	88 60       	ori	r24, 0x08	; 8
 46e:	8a b9       	out	0x0a, r24	; 10
 470:	80 b5       	in	r24, 0x20	; 32
 472:	86 68       	ori	r24, 0x86	; 134
 474:	80 bd       	out	0x20, r24	; 32
 476:	87 e6       	ldi	r24, 0x67	; 103
 478:	89 b9       	out	0x09, r24	; 9
 47a:	08 95       	ret

0000047c <UART_Rx>:

uint8 UART_Rx(void)
{
	uint8 data = 0;
	
	while (GET_BIT(UCSRA,7)==0);
 47c:	5f 9b       	sbis	0x0b, 7	; 11
 47e:	fe cf       	rjmp	.-4      	; 0x47c <UART_Rx>
	
	data = UDR;
 480:	8c b1       	in	r24, 0x0c	; 12
	
	return data;
	
}
 482:	08 95       	ret

00000484 <_exit>:
 484:	f8 94       	cli

00000486 <__stop_program>:
 486:	ff cf       	rjmp	.-2      	; 0x486 <__stop_program>
